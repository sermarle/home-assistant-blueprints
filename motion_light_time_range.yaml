blueprint:
  name: Activar dispositivo por movimiento con ajuste
  description: Este blueprint enciende un dispositivo (luz, interruptor, booleano) cuando se detecta movimiento, con ajustes relativos al atardecer (sunset).
  domain: automation
  input:
    motion_entity:
      name: Sensor de Movimiento
      selector:
        entity:
          domain: binary_sensor
          device_class: motion
    target_device:
      name: Dispositivo para activar
      description: Selecciona el dispositivo (luz, interruptor, etc.) que se activará cuando se detecte movimiento.
      selector:
        target:
          entity:
            domain:
              - light
              - switch
              - input_boolean
    sunset_offset:
      name: Offset para encender el dispositivo
      description: Define el offset en tiempo relativo al atardecer (sunset).
      default: "-01:00:00"
      selector:
        time: {}
    end_time:
      name: Hora de fin
      description: Hora en la que dejará de ejecutarse la automatización.
      default: "23:00:00"
      selector:
        time: {}
    no_motion_wait:
      name: Tiempo de espera sin movimiento
      description: Tiempo en minutos para mantener el dispositivo encendido después del último movimiento detectado.
      default: 2
      selector:
        number:
          min: 0
          max: 120
          unit_of_measurement: minutes

variables:
  target_entities: >
    {% set entities = namespace(list=[]) %}
    {% for device in device_attr('!input target_device', 'id') %}
      {% set entities.list = entities.list + device_attr(device, 'entities') %}
    {% endfor %}
    {% for area in area_attr('!input target_device', 'id') %}
      {% set entities.list = entities.list + area_entities(area) | list %}
    {% endfor %}
    {{ entities.list | unique | list }}
  expanded_entities: >
    {{ target_entities | join(', ') }}
  all_off: >
    {% for entity in target_entities %}
      {% if is_state(entity, 'on') %}
        {{ false }}
        {% break %}
      {% endif %}
    {% else %}
      {{ true }}
    {% endfor %}

trigger:
  platform: state
  entity_id: !input motion_entity
  from: "off"
  to: "on"

condition:
  - condition: sun
    after: sunset
    after_offset: !input sunset_offset
  - condition: time
    before: !input end_time
  - condition: template
    value_template: "{{ all_off }}"

action:
  - service: persistent_notification.create
    data:
      message: >
        La automatización se ejecutó.
        Sensor de movimiento: {{ trigger.to_state.entity_id }}
        Dispositivos seleccionados: {{ expanded_entities }}
        ¿Todos apagados?: {{ all_off }}
        Hora actual: {{ now().strftime('%H:%M:%S') }}
  - service: homeassistant.turn_on
    target: !input target_device
  - wait_for_trigger:
      platform: state
      entity_id: !input motion_entity
      to: "off"
  - delay:
      minutes: !input no_motion_wait
  - service: homeassistant.turn_off
    target: !input target_device
